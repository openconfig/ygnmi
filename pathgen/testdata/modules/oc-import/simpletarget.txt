// Code generated by pathgen-tests. DO NOT EDIT.

/*
Package openconfigsimpletargetpath is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema.

This package was generated by pathgen-tests
using the following YANG input files:
	- testdata/yang/openconfig-import.yang
Imported modules were sourced from:
*/
package openconfigsimpletargetpath

import (
	"reflect"
	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygnmi/ygmni"
	"github.com/openconfig/ygot/ytypes"
)

// Native_APath represents the /openconfig-simple-target/native/state/a YANG schema element.
type Native_APath struct {
	*ygnmi.NodePath
}

// Native_APathAny represents the wildcard version of the /openconfig-simple-target/native/state/a YANG schema element.
type Native_APathAny struct {
	*ygnmi.NodePath
}

// PathOrigin returns the name of the origin for the path object.
func (n *Native_APath) PathOriginName() string {
     return ""
}

// NativePath represents the /openconfig-simple-target/native YANG schema element.
type NativePath struct {
	*ygnmi.NodePath
}

// NativePathAny represents the wildcard version of the /openconfig-simple-target/native YANG schema element.
type NativePathAny struct {
	*ygnmi.NodePath
}

// PathOrigin returns the name of the origin for the path object.
func (n *NativePath) PathOriginName() string {
     return "openconfig"
}

// A (leaf): 
// 	Defining module:      "openconfig-simple-target"
// 	Instantiating module: "openconfig-simple-target"
// 	Path from parent:     "state/a"
// 	Path from root:       "/native/state/a"
func (n *NativePath) A() *Native_APath {
	ps := &Native_APath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "a"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// A (leaf): 
// 	Defining module:      "openconfig-simple-target"
// 	Instantiating module: "openconfig-simple-target"
// 	Path from parent:     "state/a"
// 	Path from root:       "/native/state/a"
func (n *NativePathAny) A() *Native_APathAny {
	ps := &Native_APathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "a"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// TargetPath represents the /openconfig-simple-target/target YANG schema element.
type TargetPath struct {
	*ygnmi.NodePath
}

// TargetPathAny represents the wildcard version of the /openconfig-simple-target/target YANG schema element.
type TargetPathAny struct {
	*ygnmi.NodePath
}

// PathOrigin returns the name of the origin for the path object.
func (n *TargetPath) PathOriginName() string {
     return "openconfig"
}
